#ifndef HELLO_H
#define HELLO_H

#include <string>

class hello {
public:
    hello();
    ~hello();

    void run();
    bool processInput(const std::string &input);
};

#endif // HELLO_H


#include "hello.h"
#include <iostream>

hello::hello() {}

hello::~hello() {}

void hello::run() {
    std::string input;
    std::cout << "Application is running... Type 'exit' to quit." << std::endl;
    
    while (true) {
        std::cin >> input;
        if (processInput(input)) {
            break;
        }
    }
}

bool hello::processInput(const std::string &input) {
    if (input == "exit") {
        std::cout << "Exiting application..." << std::endl;
        return true; // Exit the loop
    } else {
        std::cout << "You typed: " << input << std::endl;
        return false; // Continue running
    }
}



#include "hello.h"

int main() {
    hello app;
    app.run();
    return 0;
}


#include "hello.h"
#include <gtest/gtest.h>

class helloTest : public ::testing::Test {
protected:
    hello app;
};

TEST_F(helloTest, ProcessInputExit) {
    EXPECT_TRUE(app.processInput("exit"));
}

TEST_F(helloTest, ProcessInputOther) {
    EXPECT_FALSE(app.processInput("hello"));
}

int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
